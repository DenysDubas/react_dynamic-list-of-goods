{"version":3,"sources":["GoodsList.tsx","api/goods.ts","App.tsx","index.tsx"],"names":["GoodsList","goods","map","good","style","color","name","id","getAll","fetch","then","response","ok","json","Promise","reject","Error","statusText","Filter","get5First","sort","first","second","localeCompare","slice","getRed","filter","App","useState","setGoods","Default","loadType","setLoadType","hasError","setHasError","isLoading","setIsLoading","handleGetGoods","type","useEffect","a","goodsFromServer","All","FiveFirst","OnlyRed","fetchData","className","classNames","disabled","onClick","ReactDOM","render","document","getElementById"],"mappings":"uPAQaA,EAA6B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACxC,6BACGA,EAAMC,KAAI,SAAAC,GAAI,OACb,oBAEE,UAAQ,OACRC,MAAO,CAAEC,MAAOF,EAAKE,OAHvB,SAKGF,EAAKG,MAJDH,EAAKI,UCPX,SAASC,IACd,OAAOC,MAHI,yEAIRC,MAAK,SAAAC,GACJ,OAAKA,EAASC,GAMPD,EAASE,OALPC,QAAQC,OACb,IAAIC,MAAML,EAASM,gBAQtB,ICTFC,EDSQC,EAAY,WACvB,OAAOX,IACJE,MAAK,SAAAT,GAAK,OAAIA,EACZmB,MAAK,SAACC,EAAOC,GAAR,OAAmBD,EAAMf,KAAKiB,cAAcD,EAAOhB,SACxDkB,MAAM,EAAG,OAGHC,EAAS,WACpB,OAAOjB,IACJE,MAAK,SAAAT,GAAK,OAAIA,EACZyB,QAAO,SAAAvB,GAAI,MAAmB,QAAfA,EAAKE,c,SCnBtBa,K,WAAAA,E,UAAAA,E,sBAAAA,E,mBAAAA,M,KAOE,IAAMS,EAAgB,WAC3B,MAA0BC,mBAAiB,IAA3C,mBAAO3B,EAAP,KAAc4B,EAAd,KACA,EAAgCD,mBAAiBV,EAAOY,SAAxD,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAgCJ,oBAAS,GAAzC,mBAAOK,EAAP,KAAiBC,EAAjB,KACA,EAAkCN,oBAAS,GAA3C,mBAAOO,EAAP,KAAkBC,EAAlB,KAqCA,SAASC,EAAeC,GACtBN,EAAYM,GAGd,OAvCAC,qBAAU,WAAM,4CACd,8BAAAC,EAAA,sDACEJ,GAAa,GACbF,GAAY,GAFd,SAKQO,EAA4C,GALpD,KAOYV,EAPZ,cAQWb,EAAOwB,IARlB,SAWWxB,EAAOyB,UAXlB,SAcWzB,EAAO0B,QAdlB,0BASQH,EAAkBjC,IAT1B,mCAYQiC,EAAkBtB,IAZ1B,oCAeQsB,EAAkBhB,IAf1B,kFAqBuBgB,EArBvB,QAqBUtC,EArBV,OAuBI0B,EAAS1B,GAvBb,kDAyBI+B,GAAY,GAzBhB,yBA2BIE,GAAa,GA3BjB,8EADc,uBAAC,WAAD,wBAgCdS,KACC,CAACd,IAOF,sBAAKe,UAAU,MAAf,UACE,oBAAIA,UAAU,KAAd,mCAEA,wBACER,KAAK,SACL,UAAQ,aACRQ,UAAWC,IAAW,SACpB,CAAE,aAAcZ,IAClBa,SAAUjB,IAAab,EAAOwB,IAC9BO,QAAS,kBAAMZ,EAAenB,EAAOwB,MANvC,4BAWA,wBACEJ,KAAK,SACL,UAAQ,oBACRQ,UAAWC,IAAW,SACpB,CAAE,aAAcZ,IAClBa,SAAUjB,IAAab,EAAOyB,UAC9BM,QAAS,kBAAMZ,EAAenB,EAAOyB,YANvC,gCAWA,wBACEL,KAAK,SACL,UAAQ,aACRQ,UAAWC,IAAW,SACpB,CAAE,aAAcZ,IAClBa,SAAUjB,IAAab,EAAO0B,QAC9BK,QAAS,kBAAMZ,EAAenB,EAAO0B,UANvC,4BAWCT,EACG,8CAEA,qCACGF,GACC,oBAAIa,UAAU,kCAAd,yCAKF,cAAC,EAAD,CAAW7C,MAAOA,WCzG9BiD,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,U","file":"static/js/main.e69b3d72.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\nimport { Good } from './types/Good';\n\ntype Props = {\n  goods: Good[]\n};\n\nexport const GoodsList: React.FC<Props> = ({ goods }) => (\n  <ul>\n    {goods.map(good => (\n      <li\n        key={good.id}\n        data-cy=\"good\"\n        style={{ color: good.color }}\n      >\n        {good.name}\n      </li>\n    ))}\n  </ul>\n);\n","import { Good } from '../types/Good';\n\n// eslint-disable-next-line\nconst API_URL = `https://mate-academy.github.io/react_dynamic-list-of-goods/goods.json`;\n\nexport function getAll(): Promise<Good[]> {\n  return fetch(API_URL)\n    .then(response => {\n      if (!response.ok) {\n        return Promise.reject(\n          new Error(response.statusText),\n        );\n      }\n\n      return response.json();\n    });\n}\n\nexport const get5First = () => {\n  return getAll()\n    .then(goods => goods\n      .sort((first, second) => first.name.localeCompare(second.name))\n      .slice(0, 5));\n};\n\nexport const getRed = () => {\n  return getAll()\n    .then(goods => goods\n      .filter(good => good.color === 'red'));\n};\n","import React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport classNames from 'classnames';\nimport './App.scss';\nimport { GoodsList } from './GoodsList';\n\nimport { getAll, get5First, getRed } from './api/goods';\nimport { Good } from './types/Good';\n\nenum Filter {\n  Default = '',\n  All = 'all',\n  FiveFirst = 'fiveFirst',\n  OnlyRed = 'onlyRed',\n}\n\nexport const App: React.FC = () => {\n  const [goods, setGoods] = useState<Good[]>([]);\n  const [loadType, setLoadType] = useState<Filter>(Filter.Default);\n  const [hasError, setHasError] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    async function fetchData() {\n      setIsLoading(true);\n      setHasError(false);\n\n      try {\n        let goodsFromServer: Promise<Good[]> | Good[] = [];\n\n        switch (loadType) {\n          case Filter.All:\n            goodsFromServer = getAll();\n            break;\n          case Filter.FiveFirst:\n            goodsFromServer = get5First();\n            break;\n          case Filter.OnlyRed:\n            goodsFromServer = getRed();\n            break;\n          default:\n            break;\n        }\n\n        const good = await goodsFromServer;\n\n        setGoods(good);\n      } catch {\n        setHasError(true);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n\n    fetchData();\n  }, [loadType]);\n\n  function handleGetGoods(type: Filter) {\n    setLoadType(type);\n  }\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"h1\">Dynamic list of Goods</h1>\n\n      <button\n        type=\"button\"\n        data-cy=\"all-button\"\n        className={classNames('button',\n          { 'is-loading': isLoading })}\n        disabled={loadType === Filter.All}\n        onClick={() => handleGetGoods(Filter.All)}\n      >\n        Load all goods\n      </button>\n\n      <button\n        type=\"button\"\n        data-cy=\"first-five-button\"\n        className={classNames('button',\n          { 'is-loading': isLoading })}\n        disabled={loadType === Filter.FiveFirst}\n        onClick={() => handleGetGoods(Filter.FiveFirst)}\n      >\n        Load 5 first goods\n      </button>\n\n      <button\n        type=\"button\"\n        data-cy=\"red-button\"\n        className={classNames('button',\n          { 'is-loading': isLoading })}\n        disabled={loadType === Filter.OnlyRed}\n        onClick={() => handleGetGoods(Filter.OnlyRed)}\n      >\n        Load red goods\n      </button>\n\n      {isLoading\n        ? <p>Is Loading...</p>\n        : (\n          <>\n            {hasError && (\n              <h1 className=\"notification is-danger is-light\">\n                Oops, something went wrong!\n              </h1>\n            )}\n\n            <GoodsList goods={goods} />\n          </>\n        )}\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}